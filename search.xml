<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CS61A 学习体会</title>
    <url>/%E5%AD%A6%E4%B9%A0/80306b89d817/</url>
    <content><![CDATA[<p>大二暑假简单跟着<code>cs61a 20fa</code>课程进行了python学习，当然现在基本很迟了，<code>python</code>学习主要还是跟着官方文档进行知识点学习，主要利用了课程的作业、<code>lab</code>以及<code>project</code>。至于课程讲义和视频，en……目前的英语水平不支持快速浏览，只能选择性观看了。</p>
<p>本文主要记录一下课程学习过程的一些感受，而非知识点。课程知识点归入本人语雀文档<code>python</code>学习分类。</p>
<span id="more"></span>
<p>2022-7-29<br>第一次接触国外课程，还是有点震撼于差距的，当然不是知识的差距（以笔者写作时的水品还很难谈及知识），而是课程准备的差距，每项任务都有详细到各个细分问题的文档，甚至有提示视频为你写好了大部分伪代码……第一个<code>hog project</code>被细分为12个小问题，逐一解决，每一项基本可以使用不超过20行的代码完成，除了工程需要代码，为了方便逐步测试还有额外的测试函数，用来检验正确性以及一些知识点……同时还有部分提高任务可选，照顾各级学生需要……他们的<code>ok</code> 机制让初见的笔者大吃一惊……</p>
<p>对比之下，三本的课程……<br>高情商：提高学生的自学能力，信息采集能力<br>低情商：烂</p>
<p>很难讲国内的大学课程组都在想什么，可能搞科研的搞科研，搞钱的搞钱，就是没有几个人想认真教学……以后有空了可以研究一下，<del>这是不是也是特色</del></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>foreign</tag>
        <tag>record</tag>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title>文档</title>
    <url>/uncategorized/5e2d3f053d7b/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>拾遗</title>
    <url>/%E5%AD%A6%E4%B9%A0/183646acffa2/</url>
    <content><![CDATA[<p>用于记录一些零碎</p>
<h2 id="夜神-安卓-模拟器和docker冲突"><a href="#夜神-安卓-模拟器和docker冲突" class="headerlink" title="夜神(安卓)模拟器和docker冲突"></a>夜神(安卓)模拟器和docker冲突</h2><p><code>docker</code>依赖的<code>wsl2</code>依赖的<code>hyper-v</code>和安卓模拟器依赖的<code>intel HAMX</code>技术冲突,只能二选一.</p>
<p>目前貌似没有好的解决方案, <code>AzurLane</code>脚本和夜神相性已经听好了,懒得更换蓝叠的<code>Hyper-V</code>版, 大概率又要折腾一番, 反正目前<code>docker</code>用的少, 到时候自行开关就好了. 主要是开关位置有点问题. </p>
<p>大部分都是提示在”启用或关闭Windows功能”中关闭(取消勾选)”<code>hyper-v</code>“, 但是是更新了新东西? 反正没用. 在下面你还可以看到一个”虚拟机平台”选项, 取消勾选就可以打开模拟器, 勾上就可以运行”<code>docker</code>“了.</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>零碎</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1ffcc52827d7/</url>
    <content><![CDATA[<p>配置博客过程中遇到了许多问题，不少知识点，在该文档中进行总结，便于自己日后查看，重新配置。</p>
<p><strong>暂时搁置搭建，使用语雀进行学习记录</strong></p>
<h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a><code>hexo</code></h1><p><code>npm</code> 命令与 <code>hexo</code>自带命令。</p>
<span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo </span><br><span class="line">//到指定文件夹运行命令</span><br><span class="line"></span><br><span class="line">hexo init</span><br><span class="line">//初始化博客框架</span><br><span class="line"></span><br><span class="line">hexo g </span><br><span class="line">//生成网页</span><br><span class="line"></span><br><span class="line">hexo s </span><br><span class="line">//本地查看网站</span><br><span class="line"></span><br><span class="line">hexo d</span><br><span class="line">//部署博客到github上，要两次才换主题，还是有延迟？</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new &quot;title&quot;</span><br><span class="line">//生成新文章</span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: title</span><br><span class="line">date: 2022-7-14 9:44:13</span><br><span class="line"><span class="section">tags:</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">//front matter 页面属性？</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new draft &quot;draft title&quot;</span><br><span class="line">//生成草稿，草稿不会被渲染</span><br><span class="line"></span><br><span class="line">hexo new page &quot;ppage title&quot;</span><br><span class="line">//生成纯页面</span><br></pre></td></tr></table></figure>

<p><strong><code>numjucks</code>语言</strong>编写模板</p>
<p><code>yaml</code>语法编写 <code>front matter</code></p>
<h1 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h1><h2 id="ssh-key配置"><a href="#ssh-key配置" class="headerlink" title="ssh-key配置"></a><code>ssh-key</code>配置</h2><h2 id="config-yml配置"><a href="#config-yml配置" class="headerlink" title="_config.yml配置"></a><code>_config.yml</code>配置</h2><ul>
<li><code>url \ root</code></li>
<li><code>title \ author</code></li>
<li><code>deploy : type \ repo \ branch</code></li>
</ul>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>直接在 <code>\themes</code>文件夹下进行 <code>clone</code>然后直接修改克隆下的文件夹，例如对于 <code>NexT</code>主题</p>
<p><code>git clone git@github.com:theme-next/hexo-theme-next.git </code></p>
<p>然后将文件夹名由 <code>hexo-theme-next</code> 修改为 <code>next</code></p>
<p>注意在博客框架的 <code>_config.yml</code>的主题类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//next</span><br><span class="line">https://github.com/theme-next/hexo-theme-next</span><br><span class="line"></span><br><span class="line">//yilia-plus</span><br><span class="line">https://github.com/JoeyBling/hexo-theme-yilia-plus</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>Adguard</code>插件导致主题更新延迟？</p>
</blockquote>
<h1 id="问题-警告、报错"><a href="#问题-警告、报错" class="headerlink" title="问题(警告、报错)"></a>问题(警告、报错)</h1><blockquote>
<ul>
<li>npm WARN config global <code>--global</code>, <code>--local</code> are deprecated. Use <code>--location=global</code> instead.</li>
</ul>
<p><strong>solution:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以管理员身份运行</span></span><br><span class="line">npm i -g npm-windows-upgrade  # cmd</span><br><span class="line">npm-windows-upgrade  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">然后选择最新版本</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第二个命令出现后如果出现报错，按照提示运行给出命令再次运行第二个即可</span></span><br><span class="line">Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force # 管理员运行powershell</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>Connection reset by 20.205.243.166 port 22<br>fatal: Could not read from remote repository.</p>
<p>Please make sure you have the correct access rights<br>and the repository exists.<br>FATAL {<br>err: Error: Spawn failed<br>at ChildProcess.<code>&lt;anonymous&gt;</code> (D:\blog\node_modules\hexo-util\lib\spawn.js:51:21)<br>at ChildProcess.emit (node:events:527:28)<br>at ChildProcess.cp.emit (D:\blog\node_modules\cross-spawn\lib\enoent.js:34:29)<br>at Process.ChildProcess._handle.onexit (node:internal&#x2F;child_process:291:12) {<br>code: 128<br>}<br>} Something’s wrong. Maybe you can find the solution here: %s <a href="https://hexo.io/docs/troubleshooting.%3E">https://hexo.io/docs/troubleshooting.&gt;</a> html</p>
<p><a href="https://blog.zhheo.com/p/128998ac.html">Hexo错误：spawn failed的解决方法 | 张洪Heo (zhheo.com)</a> 可参考进行部分配置确认，如文章开篇所言，可能大部分情况下都是网络的问题，重启或者等待一段时间再进行部署即可</p>
<p>可使用 <code>ssh -T git@github.com</code>进行网络确认</p>
</blockquote>
<h1 id="文档编写"><a href="#文档编写" class="headerlink" title="文档编写"></a>文档编写</h1><p>文档头信息</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date: 2020-09-07 09:25:00  文章创建发布时间，未指明时会有内部记录文档添加进来的时间</span><br><span class="line">author: 文章作者</span><br><span class="line">img: 文章特征图路径，未尝试</span><br><span class="line">top: 文章置顶 true / false</span><br><span class="line">cover: 文章是否加入首页轮播封面？未尝试 true / false</span><br><span class="line">coverImg: 文章在首页轮播封面需要显示的图片路径，如果没有，默认使用文章的特色图片</span><br><span class="line">password: 文章阅读密码，必须是SHA256加密后的密码，使用前需要在主题的config.yml激活verifyPassword选项</span><br><span class="line">toc: 是否开启TOC ， true / false</span><br><span class="line">mathjax: false 是否开启数字公式支持，需要在主题的<span class="code">`_config.yml`</span>文件中一同开启</span><br><span class="line">description: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">-</span> Markdown</span><br><span class="line"><span class="bullet">-</span> ... 使用多级目录，</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> Typora</span><br><span class="line"><span class="bullet">  -</span> Markdown</span><br><span class="line">  使用多个标签</span><br><span class="line">注意同一文章只有一种（多级）目录，可以多个标签</span><br></pre></td></tr></table></figure>

<h1 id="首页置顶"><a href="#首页置顶" class="headerlink" title="首页置顶"></a>首页置顶</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载原有插件安装另一个</span></span><br><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">文章增加top信息</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加置顶图标</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打开 /blog/themes/hexo-theme-next/layout/_macro 目录下的 post.swig 文件，在&lt;div class=<span class="string">&quot;post-meta&quot;</span>&gt;标签中插入如下代码：</span></span><br><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">  &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>


<p>图片展示和下载？<br><img src="/../images/client2.jpg" alt="alt text"></p>
<p>资源可以直接放吗？<br>C源文件 server.cpp</p>


<p>makefile </p>
<figure class="highlight makefile"><figcaption><span>Makefile</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="section">all:</span></span><br><span class="line">	g++ client.cpp -o client</span><br><span class="line">	g++ server.cpp -o server</span><br><span class="line"><span class="comment"># 根据操作系统和编译器版本可能需要添加 -lpthread 参数</span></span><br><span class="line"><span class="comment"># 本地测试 ubuntu 22.04  g++-11.3.0</span></span><br></pre></td></tr></table></figure>



<p>你干嘛？？？？？为什么不显示？</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;fileheader.configObj&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">&quot;createFileTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;FilePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;only file name&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;language&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;c/cpp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;head&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/*!&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;middle&quot;</span><span class="punctuation">:</span> <span class="string">&quot; * &quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="string">&quot; */&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;functionSymbol&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;head&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;middle&quot;</span><span class="punctuation">:</span> <span class="string">&quot; * @&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="string">&quot; */&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;functionParams&quot;</span><span class="punctuation">:</span> <span class="string">&quot;js&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;autoAdd&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;autoAddLine&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;autoAlready&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;annotationStr&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;head&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;middle&quot;</span><span class="punctuation">:</span> <span class="string">&quot; * @&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="string">&quot; */&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;headInsertLine&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;php&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sh&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;beforeAnnotation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;文件后缀&quot;</span><span class="punctuation">:</span> <span class="string">&quot;该文件后缀的头部注释之前添加某些内容&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;afterAnnotation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;c&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\n/**************************************************************************************************/\n/*                                           INCLUDE_FILES                                        */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           DEFINES                                              */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           TYPES                                                */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           EXTERN_PROTOTYPES                                    */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           LOCAL_PROTOTYPES                                     */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           VARIABLES                                            */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           LOCAL_FUNCTIONS                                      */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           PUBLIC_FUNCTIONS                                     */\n/**************************************************************************************************/\n&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cpp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\n/**************************************************************************************************/\n/*                                           INCLUDE_FILES                                        */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           DEFINES                                              */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           TYPES                                                */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           EXTERN_PROTOTYPES                                    */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           LOCAL_PROTOTYPES                                     */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           VARIABLES                                            */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           LOCAL_FUNCTIONS                                      */\n/**************************************************************************************************/\n\n/**************************************************************************************************/\n/*                                           PUBLIC_FUNCTIONS                                     */\n/**************************************************************************************************/\n&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;specialOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;FilePath&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;file&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Date&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;date&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;switch&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;newlineAddAnnotation&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;supportAutoLanguage&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prohibitAutoAdd&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;json&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;folderBlacklist&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;node_modules&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;文件夹禁止自动添加头部注释&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prohibitItemAutoAdd&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;项目的全称, 整个项目禁止自动添加头部注释, 可以使用快捷键添加&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;moveCursor&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dateFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;atSymbol&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="string">&quot;@&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;atSymbolObj&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;cpp&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="string">&quot;@&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;c&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="string">&quot;@&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;colon&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;colonObj&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;文件后缀&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;头部注释冒号&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;函数注释冒号&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;filePathColon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;路径分隔符替换&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showErrorMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;writeLog&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wideSame&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">//设置头部注释字段等长</span></span><br><span class="line">        <span class="attr">&quot;wideNum&quot;</span><span class="punctuation">:</span> <span class="number">13</span><span class="punctuation">,</span> <span class="comment">//设置头部注释字段对其长度</span></span><br><span class="line">        <span class="attr">&quot;functionWideNum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;CheckFileChange&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createHeader&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;useWorker&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;designAddHead&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;headDesignName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;random&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;headDesign&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cursorModeInternalAll&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;openFunctionParamsCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;functionParamsShape&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;&#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;functionBlankSpaceAll&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;functionTypeSymbol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeParamOrder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;type param&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;customHasHeadEnd&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;throttleTime&quot;</span><span class="punctuation">:</span> <span class="number">60000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;functionParamAddStr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;NoMatchParams&quot;</span><span class="punctuation">:</span> <span class="string">&quot;no show param&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fileheader.cursorMode&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fileheader.customMade&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;custom_string_obkoro1_copyright&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Copyright (c) 2022-2024 tp-link Technolofies CO.,LTD.    All Rights Reserved.&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;custom_string_obkoro1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span> <span class="string">&quot;only file name&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;FilePath&quot;</span><span class="punctuation">:</span><span class="string">&quot;only file name&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brief&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;custom_string_obkoro2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        </span><br><span class="line">        <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yanhan &lt;yanhan1@tp-link.com.hk&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;date&quot;</span> <span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Date&quot;</span><span class="punctuation">:</span><span class="string">&quot;Do not edit&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">&quot;custom_string_obkoro3&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;history&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.autoClosingComments&quot;</span><span class="punctuation">:</span> <span class="string">&quot;languageDefined&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.rulers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="number">100</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>npm</tag>
        <tag>git</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>杂项</title>
    <url>/uncategorized/bf99a9b6c667/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#使用http代理 </span><br><span class="line">git config --global http.proxy http://127.0.0.1:58591</span><br><span class="line">git config --global https.proxy https://127.0.0.1:58591</span><br><span class="line">#使用socks5代理</span><br><span class="line">git config --global http.proxy socks5://127.0.0.1:51837</span><br><span class="line">git config --global https.proxy socks5://127.0.0.1:51837</span><br><span class="line"></span><br><span class="line">#仅对github代理</span><br><span class="line">#使用socks5代理（推荐）</span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:51837</span><br><span class="line">#使用http代理（不推荐）</span><br><span class="line">git config --global http.https://github.com.proxy http://127.0.0.1:58591</span><br><span class="line"></span><br><span class="line">git config --global --unset http.proxy git config --global --unset https.proxy</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>语言与编译分类和部分概念</title>
    <url>/%E6%9D%82%E9%A1%B9/1fa36d7cc273/</url>
    <content><![CDATA[<blockquote>
<p>计算机真是一个颇为复杂的学科，不同概念层出不穷。而且不知道是不是各种速成辅导班带来的墙内特有的混乱，反正各种博客资料是良莠不齐。以笔者水平也没法找到“正统”官方资料，只能博览众多资料，以求最细。当然，很多概念可能就是没有统一说法，只能说了解其本质内容即可，就不要纠结它到底叫什么了……</p>
<p>最后，笔者水平有限，文章内容可能有误，谨慎参考，欢迎联系指出谬误。</p>
</blockquote>
<p><strong>关于语言分类：</strong></p>
<ul>
<li>编译型语言和解释型语言</li>
<li>动态语言和静态语言</li>
<li>动态类型语言和静态类型语言</li>
<li>强类型语言和弱类型语言</li>
</ul>
<p><strong>关于编译</strong></p>
<ul>
<li><p>动态编译和静态编译</p>
<ul>
<li>似乎包含多个不同方面的含义</li>
<li>一方面和 <strong>编译型语言和解释型语言</strong> 相关，以是否在运行时进行编译优化程序速度来区分，动态编译（<code>jit, just in time</code>，即时编译）基本和解释语言关联，静态编译（<code>AOT</code>，<code>ahead of time</code>）</li>
<li>另一方面和 <strong>动&#x2F;静态链接库</strong> 有关，和链接行为有关。</li>
</ul>
</li>
<li><p><code>C/C++</code>编译器:<code>clang, clang++, gcc, g++,msvc</code></p>
</li>
<li><p>python解释器：<code>Cpython, Cython, Pypy...</code></p>
</li>
</ul>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.cnblogs.com/zhoug2020/p/5972262.html">编译型语言、解释型语言、静态类型语言、动态类型语言概念与区别 - 莫水千流 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>piece</tag>
        <tag>程序语言</tag>
        <tag>编译</tag>
      </tags>
  </entry>
  <entry>
    <title>资源下载</title>
    <url>/uncategorized/65d1c10a7869/</url>
    <content><![CDATA[<p>资源图片封装和解封装的python脚本</p>
<span id="more"></span>


<figure class="highlight python"><figcaption><span>encapsulate</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encapsulate</span>(<span class="params">image_path, zip_path, output_filename</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将压缩包数据分块封装到图片中</span></span><br><span class="line"><span class="string">    :param image_path: 原始图片路径</span></span><br><span class="line"><span class="string">    :param zip_path: 压缩包路径</span></span><br><span class="line"><span class="string">    :param output_filename: 输出文件名（基础名称）</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 读取图片数据</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(image_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        img_data = f.read()</span><br><span class="line">    img_len = <span class="built_in">len</span>(img_data)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 读取压缩包数据</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(zip_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        zip_data = f.read()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 分块设置</span></span><br><span class="line">    chunk_size = <span class="number">10</span> * <span class="number">1024</span> * <span class="number">1024</span>  <span class="comment"># 10MB</span></span><br><span class="line">    total_chunks = (<span class="built_in">len</span>(zip_data) + chunk_size - <span class="number">1</span>) // chunk_size</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 处理输出文件名</span></span><br><span class="line">    base, ext = os.path.splitext(output_filename)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(total_chunks):</span><br><span class="line">        start = i * chunk_size</span><br><span class="line">        end = start + chunk_size</span><br><span class="line">        chunk = zip_data[start:end]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 构建分块文件名</span></span><br><span class="line">        <span class="keyword">if</span> total_chunks &gt; <span class="number">1</span>:</span><br><span class="line">            chunk_filename = <span class="string">f&quot;<span class="subst">&#123;base&#125;</span>_<span class="subst">&#123;i&#125;</span><span class="subst">&#123;ext&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            chunk_filename = output_filename</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 构建分块文件内容：图片 + 分块数据 + 4字节图片长度</span></span><br><span class="line">        chunk_file_data = img_data + chunk + struct.pack(<span class="string">&#x27;!I&#x27;</span>, img_len)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 写入文件</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(chunk_filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(chunk_file_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decapsulate</span>(<span class="params">input_filename</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    从封装图片中提取并解压压缩包</span></span><br><span class="line"><span class="string">    :param input_filename: 输入文件名（基础名称或分块文件）</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    input_path = Path(input_filename)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> input_path.exists():</span><br><span class="line">        <span class="keyword">raise</span> FileNotFoundError(<span class="string">f&quot;文件 <span class="subst">&#123;input_filename&#125;</span> 不存在&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 准备文件收集参数</span></span><br><span class="line">    dir_path = input_path.parent</span><br><span class="line">    base_stem = input_path.stem</span><br><span class="line">    ext = input_path.suffix</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 匹配分块文件名模式</span></span><br><span class="line">    <span class="keyword">match</span> = re.<span class="keyword">match</span>(<span class="string">r&#x27;^(.*?)_(\d+)$&#x27;</span>, base_stem)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        base_name = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">rf&#x27;^<span class="subst">&#123;re.escape(base_name)&#125;</span>_(\d+)<span class="subst">&#123;re.escape(ext)&#125;</span>$&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        base_name = base_stem</span><br><span class="line">        pattern = re.<span class="built_in">compile</span>(<span class="string">rf&#x27;^<span class="subst">&#123;re.escape(base_name)&#125;</span>_(\d+)<span class="subst">&#123;re.escape(ext)&#125;</span>$&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 收集所有分块文件</span></span><br><span class="line">    chunk_files = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> dir_path.iterdir():</span><br><span class="line">        <span class="keyword">if</span> pattern.<span class="keyword">match</span>(file.name):</span><br><span class="line">            index = <span class="built_in">int</span>(pattern.<span class="keyword">match</span>(file.name).group(<span class="number">1</span>))</span><br><span class="line">            chunk_files.append( (index, file) )</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果没有找到分块文件则处理单个文件</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> chunk_files:</span><br><span class="line">        chunk_files.append( (<span class="number">0</span>, input_path) )</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 按索引排序</span></span><br><span class="line">    chunk_files.sort()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 校验并提取数据</span></span><br><span class="line">    zip_data = <span class="built_in">bytearray</span>()</span><br><span class="line">    img_len = <span class="literal">None</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> index, chunk_file <span class="keyword">in</span> chunk_files:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(chunk_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            data = f.read()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 校验文件有效性</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data) &lt; <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">f&quot;文件 <span class="subst">&#123;chunk_file&#125;</span> 损坏&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 提取图片长度信息</span></span><br><span class="line">        current_img_len = struct.unpack(<span class="string">&#x27;!I&#x27;</span>, data[-<span class="number">4</span>:])[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 首次获取图片长度</span></span><br><span class="line">        <span class="keyword">if</span> img_len <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            img_len = current_img_len</span><br><span class="line">        <span class="keyword">elif</span> current_img_len != img_len:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;分块文件中图片长度不一致&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 校验数据有效性</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data) &lt; img_len + <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">f&quot;文件 <span class="subst">&#123;chunk_file&#125;</span> 数据不完整&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 提取压缩数据</span></span><br><span class="line">        zip_data.extend(data[img_len:-<span class="number">4</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 写入临时压缩包</span></span><br><span class="line">    temp_zip = dir_path / <span class="string">&quot;temp_restored.zip&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(temp_zip, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(zip_data)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 解压文件</span></span><br><span class="line">    <span class="keyword">with</span> zipfile.ZipFile(temp_zip, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> zf:</span><br><span class="line">        zf.extractall(dir_path)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 清理临时文件</span></span><br><span class="line">    os.remove(temp_zip)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;成功解压到目录：<span class="subst">&#123;dir_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 示例用法</span></span><br><span class="line">    <span class="comment"># 封装示例</span></span><br><span class="line">    <span class="comment"># encapsulate(&quot;original.jpg&quot;, &quot;data.zip&quot;, &quot;output.jpg&quot;)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 解封装示例</span></span><br><span class="line">    <span class="comment"># decapsulate(&quot;output_0.jpg&quot;)</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><!-- 
### terminal

![terminal_0](../images/terminal_0.jpg)
![terminal_1](../images/terminal_1.jpg)
![terminal_2](../images/terminal_2.jpg)

### windterm

2.7.0 预览版本
![windterm_0](../images/windterm27_0.jpg)
![windterm_1](../images/windterm27_1.jpg)
![windterm_2](../images/windterm27_2.jpg)
![windterm_3](../images/windterm27_3.jpg)

2.6.1稳定版本

![windterm_0](../images/windterm261_0.jpg)
![windterm_1](../images/windterm261_1.jpg)
![windterm_2](../images/windterm261_2.jpg)

-->

<p>在职证明模板<br><img src="/../images/certification.jpg" alt="certification"></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/uncategorized/669ef07bac36/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>智能插座控制电脑远程开机</title>
    <url>/uncategorized/439fd1faedc0/</url>
    <content><![CDATA[<p>公司不让用个人电脑，但是办公电脑限制又多。不可避免要使用自己家中的电脑。无奈电脑功耗有点大了，一直开机却不用，有点心疼电费。于是倒腾一下智能插座。</p>
<p>使用米家智能插座3，通过米家app控制。</p>
<p>原理十分简单，为主板设置AC recovery 功能，即电脑断电恢复后是关机，开机还是原状态，设置开机即可。</p>
<p>然后通过远程控制插座的开关控制电脑断电然后恢复即可实现开机。</p>
<p>和我一样不太懂的小伙伴可能疑惑了，那怎么关机呢，关机完了不是又开机了？直接断电不是伤电脑吗？</p>
<p>那其实只需要明白一件事，电脑关机不等于断电，关机状态下主板其实依旧通着电，只有插座断开了源头都没了主板才是真正的断电状态。</p>
<p>所以关机时依旧正常即可。开机时远程断开插座开关等一段时间主板彻底断电然后打开即可实现开机。</p>
<blockquote>
<p>小插曲：为了一起统计显示器的电量，我是把排插插在智能插座上的。结果那个紫米插座断电后是需要再按排查按钮才能打开的，这不就没用了吗！幸好之前搬家买了个公牛排插，没有这个事。</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>dos attack</title>
    <url>/uncategorized/8398235764ba/</url>
    <content><![CDATA[<h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><p>ip dos prevent type{ land | scan-synfin | xma-scan | null-scan | port-less-1024  | smurf | blat | ping-flood | syn-flood | win-nuke | ping-of-death } </p>
<span id="more"></span>

<h4 id="land-attack"><a href="#land-attack" class="headerlink" title="land attack"></a>land attack</h4><blockquote>
<p>The attacker sends a specific fake SYN (synchronous) packet to the  destination  host.  Because  both of  the source  IP  address  and  the  destination  IP  address  of  the  SYN  packet  are  set  to  be  the  IP  a ddress  of  the  host,  the host will be trapped in an endless circle of building the initial connection. </p>
<p>攻击者向目标主机发送特定的假SYN（同步）报文。由于SYN报文的源IP地址和目的IP地址都设置为主机的IP地址，主机将陷入建立初始连接的无休止的循环中。</p>
</blockquote>
<p>LAND攻击利用了TCP连接建立的三次握手过程，通过向一个目标计算机发送一个TCP SYN报文（连接建立请求报文）而完成对目标计算机的攻击。与正常的TCP SYN报文不同的是，LAND攻击报文的源IP地址和目的IP地址是相同的，都是目标计算机的IP地址。这样目标计算机接收到这个SYN报文后，就会向该报文的源地址发送一个ACK报文，并建立一个TCP连接控制结构（TCB），而该报文的源地址就是自己，因此，这个ACK报文就发给了自己。这样如果攻击者发送了足够多的SYN报文，则目标计算机的TCB可能会耗尽，最终不能正常服务。这也是一种DOS攻击。</p>
<p><strong>防御方式：</strong></p>
<p>检查TCP报文的源地址和目的地址是否相同，或者TCP报文的源地址是否为环回地址，如果是则丢弃。</p>
<p>测试：</p>
<p>发送源地址和目的地址相同的包，或者环回地址，看是否会被丢弃。</p>
<p>不过好像应该首先了解一下怎么判断包被丢弃了。</p>
<h4 id="scan-synfin"><a href="#scan-synfin" class="headerlink" title="scan-synfin"></a>scan-synfin</h4><p>攻击者发送SYN字段置1，FIN字段置1的报文。SYN字段用于请求初始连接，FIN字段用于请求断开连接。因此，这种类型的报文是非法的。</p>
<h4 id="xma-scan-Xmascan"><a href="#xma-scan-Xmascan" class="headerlink" title="xma-scan    Xmascan"></a>xma-scan    Xmascan</h4><blockquote>
<p>The  attacker  sends  the  illegal  packet  with  its  TCP  index,  FIN, URG and PSH field set to 1</p>
<p>攻击者发送TCP索引、FIN、URG和PSH字段设置为1的非法报文</p>
</blockquote>
<h4 id="null-scan"><a href="#null-scan" class="headerlink" title="null-scan"></a>null-scan</h4><blockquote>
<p>he  attacker  sends  the illegal  packet with  its  TCP  index  and  all the control fields set to 0.  During the TCP connection and data transmission, the packets with all control fields set to 0 are considered illegal</p>
<p>攻击者将TCP索引置为0，所有控制字段置为0，发送非法报文。在TCP连接和数据传输过程中，所有控制字段设置为0的报文都被认为是非法的</p>
</blockquote>
<h4 id="port-less-1024"><a href="#port-less-1024" class="headerlink" title="port-less-1024"></a>port-less-1024</h4><blockquote>
<p>The  attacker  sends  the  illegal  packet  with  its  TCP  SYN field set to 1 and source port smaller than 1024</p>
<p>攻击者发送TCP SYN字段设置为1，源端口小于1024的非法报文</p>
</blockquote>
<h4 id="smurf"><a href="#smurf" class="headerlink" title="smurf"></a>smurf</h4><p>特定机器</p>
<p>Note: Only T1500&amp;T1500G&amp;T1600G series switch supports this feature.</p>
<blockquote>
<p>Smurf attack is a distributed denial-of-service attack in which large numbers   of   Internet   Control   Message   Protocol   (ICMP)   packets  with  the intended  victim’s spoofed  source IP  are  broadcast  to  a  computer  network using  an  IP  broadcast  address.   Most  devices  on  a  network  will,  by  default, respond to this by sending a reply to the source IP address.  If the number of machines  on  the  network  that  receive  and  respond  to  these  packets  is  very large, the victim’s computer will be flooded with traffic.</p>
<p>Smurf攻击是一种分布式拒绝服务攻击，通过IP广播地址向计算机网络发送大量ICMP （Internet Control Message Protocol）报文，欺骗目标的源IP地址。默认情况下，网络上的大多数设备将通过向源IP地址发送应答来响应此请求。如果网络上接收和响应这些数据包的机器数量非常多，受害者的计算机将被流量淹没</p>
</blockquote>
<p>Smurf是一种简单但有效的 DDoS 攻击技术，Smurf还是利用ping程序进行源IP假冒的直接广播进行攻击。（被攻击的机器为源IP，往局域网发送ping，大量reply之后瘫痪）在Internet上广播信息可以通过一定的手段（通过广播地址或其他机制）发送到整个网络中的机器。</p>
<p>防御方式：<br>1.配置路由器禁止IP广播包进网 ；<br>　　2.配置网络上所有计算机的操作系统，禁止对目标地址为广播地址的ICMP包响应。<br>　　3.被攻击目标与ISP协商，有ISP暂时阻止这些流量。<br>　　4.对于从本网络向外部网络发送的数据包，本网络应该将其源地址为其他网络的这部分数据包过滤掉。</p>
<p>使用限制：<br>由于路由器等三层设备本身就不会转发目的地址是广播地址的报文，因此Smurf攻击在网络上很难形成攻击。在防火墙上体检Smurf攻击必须要求被攻击网络是之间连接到防火墙上。</p>
<h4 id="blat"><a href="#blat" class="headerlink" title="blat"></a>blat</h4><blockquote>
<p>The attacker sends the illegal packet with the same source port and destination port on Layer 4 and with its URG field set to 1.  Similar to the Land Attack, the system performance of the attacked host is reduced becausethe Host circularly attempts to build a connection with the attacker</p>
<p>攻击者发送的非法报文在四层源端口和目的端口相同，且URG字段设置为1。与陆地攻击类似，被攻击主机的系统性能会降低，因为主机会循环尝试与攻击者建立连接</p>
</blockquote>
<p>This type of attack will send packets with the TCP&#x2F;UDP source port equal to the destination port of the target device. It may cause the target device to respond to itself.</p>
<h4 id="ping-flood"><a href="#ping-flood" class="headerlink" title="ping-flood"></a>ping-flood</h4><blockquote>
<p>The attacker floods the destination system with Ping packets, creating  a  broadcast  storm  that  makes  it  impossible  for  the  system  to respond to legal communication.   </p>
<p>攻击者向目标系统发送大量Ping包，造成广播风暴，使系统无法响应合法通信。</p>
</blockquote>
<h4 id="syn-flood"><a href="#syn-flood" class="headerlink" title="syn-flood"></a>syn-flood</h4><blockquote>
<p>The  attacker  uses  a  fake  IP  address  to  send  TCP  request packets   to   the   server.    Upon   receiving   the   request   packets,   the   server responds  with  SYN-ACK  packets.   Since  the  IP  address  is  fake,  no  response will  be  returned.   The  server  will  keep  on  sending SYN-ACK  packets.   If  the attacker  sends  overflowing  fake  request  packets,  the  network  resource  will be occupied maliciously and the requests of the legal clients will be denied</p>
<p>攻击者使用假IP地址向服务器发送TCP请求报文。服务器接收到请求报文后，发送SYN-ACK报文进行响应。由于IP地址是假的，所以不会返回任何响应。服务器将继续发送SYN-ACK报文。如果攻击者发送溢出的虚假请求报文，则会恶意占用网络资源，导致合法客户端的请求被拒绝</p>
</blockquote>
<p>SYN Flood 伪造 SYN 报文向服务器发起连接，服务器在收到报文后用 SYN_ACK 应答，此应答发出去后，不会收到 ACK 报文，造成一个半连接。若攻击者发送大量这样的报文，会在被攻击主机上出现大量的半连接，耗尽其资源，使正常的用户无法访问，直到半连接超时。在一些创建连接不受限制的实现里，SYN Flood 具有类似的影响，它会消耗掉系统的内存等资源。</p>
<p>防御方式：<br>启用 SYN Flood 攻击检测功能时，要求设置一个连接速率阈值和半开连接数量阈值，一旦发现保护主机响应的 TCP 新建连接速率超过连接速度阈值或者半开连接数量超过半开连接数量阈值，防火墙会输出发生 SYN Flood 攻击的告警日志，并且可以根据用户的配置采取以下三种措施：</p>
<p>增加 SYN 连接，也就是增加半连接队列的容量。<br>减少 SYN + ACK 重试次数，避免大量的超时重发。<br>利用 SYN Cookie 技术，在服务端接收到SYN后不立即分配连接资源，而是根据这个SYN计算出一个Cookie，连同第二次握手回复给客户端，在客户端回复ACK的时候带上这个Cookie值，服务端验证 Cookie 合法之后才分配连接资源。</p>
<h4 id="win-nuke"><a href="#win-nuke" class="headerlink" title="win-nuke"></a>win-nuke</h4><blockquote>
<p>Because  the  Operation  System  with  bugs  cannot  correctly process  the URG  (Urgent  Pointer)  of  TCP  packets,  the  attacker  sends  this  631type of packets to the TCP port139 (NetBIOS) of the host with the Operation System bugs, which will cause the host with a blue screen.</p>
<p>由于有bug的操作系统无法正确处理TCP报文的URG (Urgent Pointer)，攻击者将这种631类型的报文发送到有bug的操作系统主机的TCP port139 (NetBIOS)，造成主机蓝屏。</p>
</blockquote>
<p>winnuke是利用NetBIOS协议中一个OOB（Out of Band）的漏洞，也就是所谓的带外数据漏洞而进行的，它的原理是通过TCP&#x2F;IP协议传递一个Urgent紧急数据包到计算机的139端口(139：NetBIOS会话服务的TCP端口)，当win95&#x2F;NT收到这个数据包之后就会瞬间死机或蓝屏，不重新启动计算机就无法继续使用TCP&#x2F;IP协议来访问网络。<br>还有一种是IGMP（Internet Group Management Protocol）分片报文。一般情况下IGMP报文是不会分片的，很多系统对IGMP分片报文的处理也都存在问题。</p>
<p>带外数据OOB是指TCP连接中发送的一种特殊数据，它的优先级高于一般的数据，带外数据在报头中设置了URG标志，可以不按照通常的次序进入TCP缓冲区，而是进入另外一个缓冲区，立即可以被进程读取或根据进程设置使用SIGURG信号通知进程有带外数据到来。</p>
<p>后来的Winnuke系列工具已经从最初对单个IP的攻击发展到可以攻击一个IP区间范围的计算机，可以检测和选择端口，并且可以进行连续攻击，还能验证攻击的效果，所以使用它可以造成某个IP地址区间的计算机全部蓝屏死机。</p>
<p>防御方式：<br>此类攻击是由于利用软件开发过程中对某种特定类型的报文或请求没有处理，导致软件遇到这类型报文时运行出现异常，软件崩溃甚至系统崩溃。防范此类攻击的方法就是升级系统或给系统打补丁，也可以删除NetBIOS协议或关闭137、138、139端口。</p>
<h4 id="ping-of-death"><a href="#ping-of-death" class="headerlink" title="ping-of-death"></a>ping-of-death</h4><p>Note: Only T1500&amp;T1500G&amp;T1600G series switch supports this feature.</p>
<blockquote>
<p>Ping   of   Death   attack   means   that   the   attackersends abnormal ping packets larger than 65535 bytes to cause system crash on the target computer</p>
<p>Ping of Death攻击是指攻击者向目标计算机发送大于65535字节的异常Ping报文，导致系统崩溃</p>
</blockquote>
]]></content>
  </entry>
</search>
